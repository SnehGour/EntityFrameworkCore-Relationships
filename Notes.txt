1. Required One-to-many
// Principal (parent)
public class Person
{
    public int PersonId { get; set; }
    public string Name { get; set; }
    public int Age { get; set; }
    public IEnumerable<PhoneNumber> Phones { get; set; }

}

// Dependent (child)
public class PhoneNumber
{
    public int PhoneNumberId { get; set; }
    public string Phone { get; set; }
    public int PersonId { get; set; } // since it is int and can't be null it is required FK property
    public Person Person { get; set; } = null!; // Required naivgation to principal
}